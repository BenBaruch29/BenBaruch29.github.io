<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ben Baruch&#39;s Sports Blog</title>
    <link>https://BenBaruch29.github.io/sportsblog/</link>
    <description>Recent content on Ben Baruch&#39;s Sports Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://BenBaruch29.github.io/sportsblog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Volleyball Aces</title>
      <link>https://BenBaruch29.github.io/sportsblog/2022/10/27/volleyball-aces/</link>
      <pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://BenBaruch29.github.io/sportsblog/2022/10/27/volleyball-aces/</guid>
      <description>library(dplyr)## ## Attaching package: &amp;#39;dplyr&amp;#39;## The following objects are masked from &amp;#39;package:stats&amp;#39;:## ## filter, lag## The following objects are masked from &amp;#39;package:base&amp;#39;:## ## intersect, setdiff, setequal, unionlibrary(ggplot2)library(ggbeeswarm)library(ggrepel)logs &amp;lt;- read.csv(&amp;quot;C:/Users/benba/OneDrive/Documents/479xblogs/sportsblog/ncaa_womens_volleyball_playerstats_2022.csv&amp;quot;)head(logs)## team season jersey full_name roster_name## 1 A&amp;amp;M-Corpus Christi Islanders 2022 23 Zoria Heard Heard, Zoria## 2 A&amp;amp;M-Corpus Christi Islanders 2022 12 Halle Gibson Gibson, Halle## 3 A&amp;amp;M-Corpus Christi Islanders 2022 33 Tayah Little Little, Tayah## 4 A&amp;amp;M-Corpus Christi Islanders 2022 9 Kyndal Payne Payne, Kyndal## 5 A&amp;amp;M-Corpus Christi Islanders 2022 7 Leah Stolfus Stolfus, Leah## 6 A&amp;amp;M-Corpus Christi Islanders 2022 5 Carissa Barnes Barnes, Carissa## last_name first_name yr pos feet inches gp gs mp s ms kills errors## 1 Heard Zoria Fr L 5 6 25 8 25 85 NA 4 3## 2 Gibson Halle Fr S 5 9 25 4 25 74 NA 22 3## 3 Little Tayah Fr MB 5 9 25 23 25 84 NA 122 62## 4 Payne Kyndal So OH 5 11 25 25 25 90 NA 331 141## 5 Stolfus Leah So MB 6 0 25 25 25 89 NA 245 65## 6 Barnes Carissa Sr L 5 7 25 0 25 90 NA 1 1## total_attacks hit_pct assists aces s_err digs r_err block_solos block_assists## 1 18 0.</description>
    </item>
    
    <item>
      <title>Maryland Football YPP</title>
      <link>https://BenBaruch29.github.io/sportsblog/2022/10/25/maryland-football-ypp/</link>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://BenBaruch29.github.io/sportsblog/2022/10/25/maryland-football-ypp/</guid>
      <description>library(tidyverse)## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──## ✔ ggplot2 3.3.6 ✔ purrr 0.3.5 ## ✔ tibble 3.1.8 ✔ dplyr 1.0.10## ✔ tidyr 1.2.1 ✔ stringr 1.4.1 ## ✔ readr 2.1.3 ✔ forcats 0.5.2 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──## ✖ dplyr::filter() masks stats::filter()## ✖ dplyr::lag() masks stats::lag()library(ggrepel)logs &amp;lt;- read.csv(&amp;quot;C:/Users/benba/OneDrive/Documents/479xblogs/sportsblog/footballlogs1122.csv&amp;quot;)winlosslogs &amp;lt;- logs %&amp;gt;% mutate(wins = case_when(grepl(&amp;quot;W&amp;quot;, Outcome) ~ 1, grepl(&amp;quot;L&amp;quot;, Outcome) ~ 0))In order to make this data work with a bubble chart (and use larger bubbles to represent more wins), we need to define each win as a numerical value of 1 and each loss as a numerical value of 0.</description>
    </item>
    
    <item>
      <title>Wins vs. Recruiting</title>
      <link>https://BenBaruch29.github.io/sportsblog/2022/10/20/wins-vs-recruiting/</link>
      <pubDate>Thu, 20 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://BenBaruch29.github.io/sportsblog/2022/10/20/wins-vs-recruiting/</guid>
      <description>Loading the data
ratings &amp;lt;- read.csv(&amp;quot;C:/Users/benba/OneDrive/Documents/479xblogs/sportsblog/all_rankings.csv&amp;quot;)wins &amp;lt;- read.csv(&amp;quot;C:/Users/benba/OneDrive/Documents/479xblogs/sportsblog/all_teams.csv&amp;quot;)head(ratings)## team rating year## 1 Texas A&amp;amp;M 333.13 2022## 2 Alabama 322.25 2022## 3 Georgia 318.34 2022## 4 Ohio State 300.95 2022## 5 Texas 289.04 2022## 6 Penn State 278.66 2022head(wins)## year team conference division expected_wins total_games## 1 2021 Air Force Mountain West Mountain 9.1 13## 2 2021 Akron Mid-American East 1.</description>
    </item>
    
    <item>
      <title>First Play Interceptions</title>
      <link>https://BenBaruch29.github.io/sportsblog/2022/10/19/first-play-interceptions/</link>
      <pubDate>Wed, 19 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://BenBaruch29.github.io/sportsblog/2022/10/19/first-play-interceptions/</guid>
      <description>In this assignment, we’ll investigate Indiana’s turnover on the first play of the drive and see how rare that is in college football in the year 2022.
seasons &amp;lt;- 2014:cfbfastR:::most_recent_cfb_season()progressr::with_progress({pbp &amp;lt;- cfbfastR::load_cfb_pbp(seasons)})tictoc::toc()library(tidyverse)## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──## ✔ ggplot2 3.3.6 ✔ purrr 0.3.5 ## ✔ tibble 3.1.8 ✔ dplyr 1.0.10## ✔ tidyr 1.2.1 ✔ stringr 1.4.1 ## ✔ readr 2.</description>
    </item>
    
    <item>
      <title>About Ben Baruch</title>
      <link>https://BenBaruch29.github.io/sportsblog/about/</link>
      <pubDate>Thu, 13 Oct 2022 21:48:51 -0700</pubDate>
      
      <guid>https://BenBaruch29.github.io/sportsblog/about/</guid>
      <description>This is a &amp;ldquo;hello world&amp;rdquo; example website for the blogdown package. The theme was forked from @jrutheiser/hugo-lithium-theme and modified by Yihui Xie.</description>
    </item>
    
    <item>
      <title>B10 Average Offensive Plays</title>
      <link>https://BenBaruch29.github.io/sportsblog/2022/10/13/b10-average-offensive-plays/</link>
      <pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://BenBaruch29.github.io/sportsblog/2022/10/13/b10-average-offensive-plays/</guid>
      <description>library(tidyverse)## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──## ✔ ggplot2 3.3.6 ✔ purrr 0.3.4 ## ✔ tibble 3.1.8 ✔ dplyr 1.0.10## ✔ tidyr 1.2.0 ✔ stringr 1.4.1 ## ✔ readr 2.1.2 ✔ forcats 0.5.2 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──## ✖ dplyr::filter() masks stats::filter()## ✖ dplyr::lag() masks stats::lag()library(scales)## ## Attaching package: &amp;#39;scales&amp;#39;## ## The following object is masked from &amp;#39;package:purrr&amp;#39;:## ## discard## ## The following object is masked from &amp;#39;package:readr&amp;#39;:## ## col_factorAfter loading the large dataframe, I’ll use the filter function to limit my results to the Big Ten Conference only.</description>
    </item>
    
    <item>
      <title>Big Ten Average Offensive Plays</title>
      <link>https://BenBaruch29.github.io/sportsblog/2022/10/13/big-ten-average-offensive-plays/</link>
      <pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://BenBaruch29.github.io/sportsblog/2022/10/13/big-ten-average-offensive-plays/</guid>
      <description>library(tidyverse)library(scales) After loading the large dataframe, I&amp;rsquo;ll use the filter function to limit my results to the Big Ten Conference only. We&amp;rsquo;ll call this smaller dataframe big_ten
logs &amp;lt;- read.csv(&amp;#34;C:/Users/benba/OneDrive/Documents/GitHub/jour479x_fall_2022/data/footballlogs21.csv&amp;#34;)big_ten &amp;lt;- logs %&amp;gt;% filter(Conference == &amp;#34;Big Ten Conference&amp;#34;) Now, we&amp;rsquo;re going to calculate how many offensive plays each Big Ten team had, on average. We&amp;rsquo;ll do this by making a new dataframe called avg_plays. We&amp;rsquo;ll group by Teams (in this case called TeamFull), and summarize their average plays, which will be the mean of their total offensive plays.</description>
    </item>
    
    <item>
      <title>Sports Data Analysis and Visualization</title>
      <link>https://BenBaruch29.github.io/sportsblog/2022/10/13/sports-data-analysis-and-visualization/</link>
      <pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://BenBaruch29.github.io/sportsblog/2022/10/13/sports-data-analysis-and-visualization/</guid>
      <description>This is my sports data analysis and visualization blog!</description>
    </item>
    
    <item>
      <title>Volleyball Waffle Chart</title>
      <link>https://BenBaruch29.github.io/sportsblog/2022/10/13/volleyball-waffle-chart/</link>
      <pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://BenBaruch29.github.io/sportsblog/2022/10/13/volleyball-waffle-chart/</guid>
      <description>library(tidyverse)## ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──## ✔ ggplot2 3.3.6 ✔ purrr 0.3.5 ## ✔ tibble 3.1.8 ✔ dplyr 1.0.10## ✔ tidyr 1.2.1 ✔ stringr 1.4.1 ## ✔ readr 2.1.3 ✔ forcats 0.5.2 ## ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──## ✖ dplyr::filter() masks stats::filter()## ✖ dplyr::lag() masks stats::lag()library(dplyr)library(waffle)As always, we start by loading and checking the data.
logs &amp;lt;- read_csv(&amp;quot;https://raw.githubusercontent.com/dwillis/NCAAWomensVolleyballData/main/data/ncaa_womens_volleyball_matchstats_2022.csv&amp;quot;)## Rows: 6687 Columns: 36## ── Column specification ────────────────────────────────────────────────────────## Delimiter: &amp;quot;,&amp;quot;## chr (4): team, opponent, home_away, result## dbl (31): team_score, opponent_score, s, kills, errors, total_attacks, hit_.</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>https://BenBaruch29.github.io/sportsblog/2020/12/01/hello-r-markdown/</link>
      <pubDate>Tue, 01 Dec 2020 21:13:14 -0500</pubDate>
      
      <guid>https://BenBaruch29.github.io/sportsblog/2020/12/01/hello-r-markdown/</guid>
      <description>R MarkdownThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars)## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>A Plain Markdown Post</title>
      <link>https://BenBaruch29.github.io/sportsblog/2016/12/30/a-plain-markdown-post/</link>
      <pubDate>Fri, 30 Dec 2016 21:49:57 -0700</pubDate>
      
      <guid>https://BenBaruch29.github.io/sportsblog/2016/12/30/a-plain-markdown-post/</guid>
      <description>This is a post written in plain Markdown (*.md) instead of R Markdown (*.Rmd). The major differences are:
You cannot run any R code in a plain Markdown document, whereas in an R Markdown document, you can embed R code chunks (```{r}); A plain Markdown post is rendered through Blackfriday, and an R Markdown document is compiled by rmarkdown and Pandoc. There are many differences in syntax between Blackfriday&amp;rsquo;s Markdown and Pandoc&amp;rsquo;s Markdown.</description>
    </item>
    
    <item>
      <title>Lorem Ipsum</title>
      <link>https://BenBaruch29.github.io/sportsblog/2015/01/01/lorem-ipsum/</link>
      <pubDate>Thu, 01 Jan 2015 13:09:13 -0600</pubDate>
      
      <guid>https://BenBaruch29.github.io/sportsblog/2015/01/01/lorem-ipsum/</guid>
      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</description>
    </item>
    
  </channel>
</rss>
